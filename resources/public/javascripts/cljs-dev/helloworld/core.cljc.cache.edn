;; Analyzed by ClojureScript 0.0-3308
{:name helloworld.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {reagent reagent.core, reagent.core reagent.core}, :imports nil, :defs {multiply-numbers {:protocol-inline nil, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljc", :line 4, :column 7, :end-line 4, :end-column 23, :arglists (quote ([x y]))}, :name helloworld.core/multiply-numbers, :variadic false, :file "src/helloworld/core.cljc", :end-column 23, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, say-hello {:protocol-inline nil, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljc", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([]))}, :name helloworld.core/say-hello, :variadic false, :file "src/helloworld/core.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}