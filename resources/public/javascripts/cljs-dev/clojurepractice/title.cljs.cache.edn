;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name clojurepractice.title, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {put! cljs.core.async}, :defs {items-list {:protocol-inline nil, :meta {:file "/home/dna-dev/Documents/practice/clojurepractice/src/clojurepractice/title.cljs", :line 4, :column 7, :end-line 4, :end-column 17, :arglists (quote ([EVENTCHANNEL items active-item]))}, :name clojurepractice.title/items-list, :variadic false, :file "src/clojurepractice/title.cljs", :end-column 17, :method-params ([EVENTCHANNEL items active-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([EVENTCHANNEL items active-item]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:update-active-item :key :on-click :div :class :display :active-item :p}, :order [:div :class :p :on-click :update-active-item :active-item :display :key]}, :doc nil}